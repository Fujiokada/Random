local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local localPlayer = Players.LocalPlayer
local biomeLabel = localPlayer.PlayerGui.Main.GearInventory.Money.Map.Biome

local potionRemote = ReplicatedStorage:WaitForChild("GetRemoteEvents"):WaitForChild("Backpack"):WaitForChild("Interact")

local webhookURL = "https://discord.com/api/webhooks/1339427763555270718/5KBiqurMM4ct8Z73J4DNKGjsd_NfCFygM8RVPkiy-uEg5WfbkC0wlFvJNqGDnH_h-2aw"

local lastBiome = nil

-- Function to use the potion 5 times
local function usePotion()
    for i = 1, 5 do
        potionRemote:FireServer("Luck Potion", 1)
        task.wait(0.1) -- Slight delay between uses
    end
end

-- Function to send webhook notification
local function sendDiscordNotification(biome)
    local message = "**Biome Changed!**\n\n"
    message = message .. "New Biome: **" .. biome .. "**"
    
    if biome == "Snowy" then
        message = "**❄️ SNOWY BIOME DETECTED! ❄️**"
    end

    local data = {
        ["username"] = "Biome Notifier",
        ["content"] = message,
        ["embeds"] = {{
            ["title"] = "Biome Update",
            ["description"] = "The biome has changed to **" .. biome .. "**",
            ["color"] = biome == "Snowy" and 3447003 or 16711680, -- Blue for Snowy, Red for others
            ["footer"] = {
                ["text"] = "Biome Tracker",
            },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ") -- UTC time
        }}
    }

    local jsonData = HttpService:JSONEncode(data)

    pcall(function()
        syn.request({
            Url = webhookURL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonData
        })
    end)
end

-- Monitor biome changes
task.spawn(function()
    while true do
        local currentBiome = biomeLabel.Text:match("%[ Biome: (.+) %]") -- Extracts the biome name
        
        if currentBiome and currentBiome ~= lastBiome then
            lastBiome = currentBiome
            sendDiscordNotification(currentBiome)
            
            -- If biome is "Snowy", use the potion
            if currentBiome == "Snowy" then
                usePotion()
            end
        end

        task.wait(0.5) -- Check every second
    end
end)
