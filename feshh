-- Get Services
local player = game:GetService("Players").LocalPlayer
local gui = player:FindFirstChild("PlayerGui")
local replicatedStorage = game:GetService("ReplicatedStorage")

-- Get UI Elements
local function getUIElements()
    if gui then
        local fishingUI = gui:FindFirstChild("Fishing")
        if fishingUI then
            local frame = fishingUI:FindFirstChild("FishingFrame") and fishingUI.FishingFrame:FindFirstChild("Frame")
            local progressBar = fishingUI.FishingFrame:FindFirstChild("ProgressBar")
            
            if frame and progressBar then
                return frame:FindFirstChild("bar"), frame:FindFirstChild("Fish"), progressBar:FindFirstChild("filll")
            end
        end
    end
    return nil, nil, nil
end

-- Loop to update bar position
spawn(function()
    while true do
        local bar, fish, _ = getUIElements()
        if bar and fish then
            bar.Position = fish.Position
        end
        wait() -- Prevents script from crashing
    end
end)

-- Loop to fire the Fishing cast event
spawn(function()
    while true do
        local castRemote = replicatedStorage:FindFirstChild("GetRemoteEvents")
            and replicatedStorage.GetRemoteEvents:FindFirstChild("Fishing")
            and replicatedStorage.GetRemoteEvents.Fishing:FindFirstChild("Cast")

        if castRemote then
            local args = {
                [1] = true,
                [2] = 100
            }
            castRemote:FireServer(unpack(args))
        end
        wait(1) -- Adjust delay as needed
    end
end)

-- Loop to keep ProgressBar.filll X size at 1, 0
spawn(function()
    while true do
        local _, _, filll = getUIElements()
        if filll then
            filll.Size = UDim2.new(1, 0, filll.Size.Y.Scale, filll.Size.Y.Offset)
        end
        wait() -- Adjust if needed for smoother updating
    end
end)
