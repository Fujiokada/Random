local player = game:GetService("Players").LocalPlayer
local workspace = game:GetService("Workspace")
local httpService = game:GetService("HttpService")
local starterGui = game:GetService("StarterGui")

local webhookURL = "https://discord.com/api/webhooks/1339427763555270718/5KBiqurMM4ct8Z73J4DNKGjsd_NfCFygM8RVPkiy-uEg5WfbkC0wlFvJNqGDnH_h-2aw"
local merchantFolder = workspace:WaitForChild("Merchant")
local merchantGUI = player.PlayerGui:WaitForChild("VioletBuyGUI"):WaitForChild("Merchant"):WaitForChild("Items")

local httpRequest = syn and syn.request or request or http_request or fluxus.request
if not httpRequest then
    error("Your executor does not support HTTP requests.")
end

local merchantPosition = nil

local function getMerchantItems()
    local items = {}
    for _, frame in pairs(merchantGUI:GetChildren()) do
        if frame:IsA("Frame") and frame:FindFirstChild("ItemTitle") then
            table.insert(items, frame.ItemTitle.Text)
        end
    end
    return items
end

local function sendDiscordNotification()
    if not merchantPosition then return end

    local items = getMerchantItems()
    local itemList = ""
    for _, itemName in ipairs(items) do
        itemList = itemList .. "- `" .. itemName .. "`\n"
    end

    local data = {
        ["username"] = "Merchant Notifier",
        ["content"] = "@everyone üö® **A Merchant has spawned!** üö®",
        ["embeds"] = {{
            ["title"] = "**Merchant Spawned!**",
            ["description"] = "A new **Merchant** has appeared in the world!",
            ["color"] = 16755200, -- Orange
            ["fields"] = {
                {
                    ["name"] = "Position",
                    ["value"] = string.format("X: %.2f, Y: %.2f, Z: %.2f", merchantPosition.X, merchantPosition.Y, merchantPosition.Z),
                    ["inline"] = true
                },
                {
                    ["name"] = "Timestamp",
                    ["value"] = "<t:" .. os.time() .. ":R>",
                    ["inline"] = true
                },
                {
                    ["name"] = "Available Items",
                    ["value"] = itemList ~= "" and itemList or "Unknown",
                    ["inline"] = false
                }
            },
            ["footer"] = {
                ["text"] = "Roblox Merchant Notifier",
                ["icon_url"] = "https://i.imgur.com/yqbGJC3.png"
            },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }}
    }

    local jsonData = httpService:JSONEncode(data)

    local success, err = pcall(function()
        httpRequest({
            Url = webhookURL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = jsonData
        })
    end)

    if success then
        print("‚úÖ Merchant notification sent!")
    else
        warn("‚ùå Failed to send merchant notification: " .. tostring(err))
    end
end

local function teleportToMerchant()
    local merchantRoot = workspace:FindFirstChild("Merchant")
    if merchantRoot then
        local violetFolder = merchantRoot:FindFirstChild("Violet")
        if violetFolder then
            local merchantModel = violetFolder:FindFirstChild("MerchantModel")
            if merchantModel then
                local rootPart = merchantModel:FindFirstChild("HumanoidRootPart")
                if rootPart and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    player.Character.HumanoidRootPart.CFrame = rootPart.CFrame
                    print("‚úÖ Teleported to Merchant at:", rootPart.Position)
                    return
                end
            end
        end
    end
    warn("‚ùå Failed to teleport: Could not find merchant‚Äôs HumanoidRootPart.")
end

local function showTeleportNotification()
    starterGui:SetCore("SendNotification", {
        Title = "Merchant Spawned!",
        Text = "A merchant has appeared! Teleport?",
        Duration = 999999,
        Button1 = "Yes",
        Button2 = "No",
        Callback = function(response)
            if response == "Yes" then
                teleportToMerchant()
            end
        end
    })
end

local function checkForMerchant(folder)
    folder.ChildAdded:Connect(function(merchant)
        if merchant:IsA("Model") and merchant.Name == "MerchantModel" then
            task.wait(1)
            local rootPart = merchant:FindFirstChild("HumanoidRootPart")
            if rootPart then
                merchantPosition = rootPart.Position
                print("üîî Merchant detected at:", merchantPosition)
                sendDiscordNotification()
                showTeleportNotification()
            end
        end
    end)

    for _, merchant in ipairs(folder:GetChildren()) do
        if merchant:IsA("Model") and merchant.Name == "MerchantModel" then
            task.wait(1)
            local rootPart = merchant:FindFirstChild("HumanoidRootPart")
            if rootPart then
                merchantPosition = rootPart.Position
                print("üîî Existing Merchant detected at:", merchantPosition)
                sendDiscordNotification()
                showTeleportNotification()
                break
            end
        end
    end
end

local function monitorMerchantFolder()
    merchantFolder.ChildAdded:Connect(function(newFolder)
        if newFolder:IsA("Folder") and newFolder.Name == "Violet" then
            print("üìÇ New merchant folder detected:", newFolder.Name)
            checkForMerchant(newFolder)
        end
    end)
end

monitorMerchantFolder()

print("üöÄ Merchant spawn detector is now running!")
