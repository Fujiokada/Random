-- Toggle the script on or off
local scriptEnabled = true

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Remotes
local spawnTowerRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("SpawnTowerServer")
local upgradeTowerRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("UpgradeTowerServer")
local voteDifficultyRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("VoteDifficulty")
local restartRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("VoteRestart")

-- Configurations
local towersToPlace = {
    {id = "71923f34-850b-442a-8305-3e4d3cf2f6f0", position = Vector3.new(-1378.1527099609375, 3, 1218.3643798828125), param3 = 0, param4 = "{f8d4555b-9296-4402-9a3f-d8216d6721bc}"},
    {id = "79931fab-e2fa-44e0-8d10-e6d8c2b52488", position = Vector3.new(-1378.1669921875, 3, 1226.258544921875), param3 = 0, param4 = "{99189513-5db5-4a27-aa87-16e8d78edc39}"},
    {id = "4093ee71-05b2-432c-96b4-f879d02597a9", position = Vector3.new(-1383.9932861328125, 3, 1242.013427734375), param3 = 0, param4 = "{3b7165ae-a350-4ec2-acf8-f63299b443c6}"},
    {id = "c692fc98-6ced-42cf-9244-897825440731", position = Vector3.new(-1374.1455078125, 5, 1245.8980712890625), param3 = 0, param4 = "{0a401143-e926-4a37-baab-29e8e1eaf251}"},
    {id = "f55d085d-fa91-4499-a1e6-ca7b8088de18", position = Vector3.new(-1388.07080078125, 5, 1257.5634765625), param3 = 0, param4 = "{646d9612-0cbd-4874-a0a3-71b6e435ff22}"},
    {id = "c692fc98-6ced-42cf-9244-897825440731", position = Vector3.new(-1381.3525390625, 5, 1258.1229248046875), param3 = 0, param4 = "{1866c8d0-970e-44a7-9102-8b8bab0abdd3}"}
}

local upgradeLevels = 10 -- Number of upgrades to apply to each tower
local upgradeInterval = 0.3 -- Faster upgrade interval in seconds
local voteDifficulty = "BossRushOne" -- Difficulty level to vote for
local towersPlaced = false -- Tracks if towers have already been placed this match

-- Helper function to check if the vote UI is active
local function isVoteUIActive()
    local mainGui = PlayerGui:FindFirstChild("MainGui")
    if mainGui then
        local difficulty = mainGui:FindFirstChild("Difficulty")
        return difficulty and difficulty:IsA("ImageLabel") and difficulty.Visible
    end
    return false
end

-- Helper function to check if the Retry button is present
local function isRetryButtonActive()
    local mainGui = PlayerGui:FindFirstChild("MainGui")
    return mainGui and mainGui:FindFirstChild("Retry") ~= nil
end

-- Function to vote for the map
local function voteForMap()
    while scriptEnabled and isVoteUIActive() do
        voteDifficultyRemote:FireServer(voteDifficulty)
        task.wait(1)
    end
end

-- Function to place towers immediately
local function placeTowers()
    for _, tower in ipairs(towersToPlace) do
        spawnTowerRemote:FireServer(tower.id, tower.position, tower.param3, tower.param4)
    end
    towersPlaced = true
end

-- Function to upgrade all towers simultaneously
local function upgradeTowers()
    local sizeColliders = workspace:WaitForChild("SizeColliders")
    local towersToUpgrade = {}
    
    -- Collect EntityIds for all towers
    for _, model in ipairs(sizeColliders:GetChildren()) do
        if model:IsA("Model") and model:GetAttribute("EntityId") then
            table.insert(towersToUpgrade, model:GetAttribute("EntityId"))
        end
    end

    -- Upgrade all towers for each level
    for level = 2, upgradeLevels + 1 do
        for _, entityId in ipairs(towersToUpgrade) do
            if not scriptEnabled then return end
            local args = {
                [1] = entityId,
                [2] = level
            }
            upgradeTowerRemote:FireServer(unpack(args))
        end
        task.wait(upgradeInterval) -- Wait between upgrade levels
    end
end

-- Function to restart the match
local function restartMatch()
    while scriptEnabled and isRetryButtonActive() do
        restartRemote:FireServer()
        task.wait(0.5)
    end
    towersPlaced = false -- Reset placement flag for the new match
end

-- Main loop
while scriptEnabled do
    if isRetryButtonActive() then
        -- If the Retry button is active, restart and immediately place towers
        restartMatch()
        voteForMap()
        placeTowers()
    elseif isVoteUIActive() then
        -- If voting UI is active, vote for the map
        voteForMap()
    elseif not towersPlaced then
        -- Place towers if not already placed in the current round
        placeTowers()
    else
        -- Upgrade towers during the match
        upgradeTowers()
    end
    task.wait(1) -- Delay to prevent excessive checks
end
